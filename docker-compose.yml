services:
  postgres:
    image: postgres:16-alpine
    container_name: map_postgres
    environment:
      POSTGRES_DB: albums
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d albums || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30

  minio:
    image: minio/minio:latest
    container_name: map_minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data

  api:
    build:
      context: ./backend
      dockerfile: src/MyAlbumPro.Api/Dockerfile
    container_name: map_api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:8080
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_started
    ports:
      - "8080:8080"
    restart: on-failure

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: map_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@local.test
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  web:
    build:
      context: ./frontend/app
      dockerfile: Dockerfile
    container_name: map_web
    environment:
      VITE_API_BASE: http://localhost:8080
      VITE_GOOGLE_CLIENT_ID: ""
    depends_on:
      - api
    ports:
      - "5173:5173"

volumes:
  pgdata:
  minio-data:
  pgadmin-data:
